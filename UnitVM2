        [DisplayName("نام واحد"), Required, StringLength(150, MinimumLength = 2, ErrorMessage = "نام واحد باید شامل حداقل 2 و حداکثر 150 کاراکتر باشد.")]
        public string NamVahed { get; set; }

        [DisplayName("نوع واحد"), Required, JustLookups, UIHint("DropDown")]
        public int? NoeVahed { get; set; }
        public List<SelectListItem> NoeVahed_LK { get { return Lookups.GetSelectListItems("NoeVahed"); } }

        [DisplayName("خاتمه فعالیت"), DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:yyyy/MM/dd}", ApplyFormatInEditMode = true)]
        public DateTime? PayanFaaliat { get; set; }

        [DisplayName("آیا واحد غیربنیادی است؟"), Required(ErrorMessage = "بنیادی یا غیربنیادی بودن واحد باید مشخص شود."), UIHint("YesNo")]
        public bool? VahedGheyrBonyadi { get; set; }

        [DisplayName("آیا واحد، یک شرکت کاغذی است؟"), Required(ErrorMessage = "کاغذی یا غیرکاغذی بودن واحد باید مشخص شود."), UIHint("YesNo")]
        public bool? SherkatKaghazi { get; set; }

        [DisplayName("شرکت/واحد مادر"), Required(ErrorMessage = "شرکت/واحد مادر باید مشخص شود"), UIHint("DropDownTree")]
        public int? ParentId { get; set; }

        public IEnumerable<DropDownTreeItemModel> ParentId_LK { get { return MySharedMethods.GetUnitsDropDownTree(); } }

        [DisplayName("پیشوند نام"), StringLength(30)]
        public string PishvandNam { get; set; }

        [DisplayName("استان"), JustLookups, UIHint("DropDown")]
        public int? DaftarMarkazi_Ostan { get; set; }
        public List<SelectListItem> DaftarMarkazi_Ostan_LK { get { return Lookups.GetSelectListItems("Ostan"); } }

        [DisplayName("شهر (یا نزدیکترین شهر)"), StringLength(20)]
        public string DaftarMarkazi_Shahr { get; set; }

        [DisplayName("آدرس"), StringLength(100)]
        public string DaftarMarkazi_Address { get; set; }

        [DisplayName("تلفن"), StringLength(25)]
        public string DaftarMarkazi_Tel { get; set; }

        [DisplayName("استان عمده فعالیت"), JustLookups, UIHint("DropDown")]
        public int? OmdeFaaliat_Ostan { get; set; }
        public List<SelectListItem> OmdeFaaliat_Ostan_LK { get { return Lookups.GetSelectListItems("Ostan"); } }

        [DisplayName("شهر عمده فعالیت"), StringLength(20)]
        public string OmdeFaaliat_Shahr { get; set; }

        [DisplayName("آدرس وب سایت"), StringLength(50)]
        public string AddressWebsite { get; set; }

        [DisplayName("نوع شخصیت حقوقی"), JustLookups, UIHint("DropDown")]
        public int? NoeShakhsiatHoghughi { get; set; }

        [DisplayName("رشته فعالیت"), JustLookups, UIHint("DropDown")]
        public int? ReshteFaaliat { get; set; }

        [DisplayName("زمینه فعالیت"), StringLength(1000)]
        public string ZamineFaaliat { get; set; }

        [DisplayName("تاریخچه و معرفی")]
        public string Moarefi { get; set; }

        [DisplayName("شناسه ملی"), StringLength(11), RegularExpression(@"^\d{11}$", ErrorMessage = "شناسه ملی باید شامل یازده رقم بدون فاصله و خط تیره باشد")]
        public string ShenaseMelli { get; set; }

        [DisplayName("تاریخ تاسیس"), DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:yyyy/MM/dd}", ApplyFormatInEditMode = true)]
        public DateTime? TarikhTasis { get; set; }
